using System; using System.Collections.Generic; using System.IO; using System.Linq; using System.Net; using System.Text; using System.Threading.Tasks;

namespace LabelSim { internal class Program { static void Main(string[] args) { Console.WriteLine("Use default printer? X"); var input0 = Console.ReadLine();

        string inputIp;
        int inputPort;
        if (input0 == "X" || input0 == "x")
        {
            inputIp = "192.168.34.249";
            inputPort = 6101;
        }
        else
        {
            Console.WriteLine("Enter PrinterIp");
            inputIp = Console.ReadLine();
            Console.WriteLine("Enter PrinterPort");
            inputPort = Convert.ToInt32(Console.ReadLine());
        }

        Console.WriteLine("Enter Upper Text");
        var input1 = Console.ReadLine();
        Console.WriteLine("Enter Bottom Text");
        var input2 = Console.ReadLine();
        Console.WriteLine("Enter QR Code");
        var input3 = Console.ReadLine();
        Console.WriteLine("Connecting to printer...");

        Print(input1, input2, input3, inputIp, inputPort);
    }

    static bool Print(string input1, string input2, string input3, string printerIp, int printerPort)
    {

        string labeltext = "^XA" + Environment.NewLine +
            " " + Environment.NewLine +
            "^FWR" + Environment.NewLine +
            " " + Environment.NewLine +
            "^CF0,100" + Environment.NewLine +
            "^FO210,70^FD" + input1 + "^FS" + Environment.NewLine +
            " " + Environment.NewLine +
            "^CF0,45" + Environment.NewLine +
            "^FO40,60^FD" + input2 + "^FS" + Environment.NewLine +
            " " + Environment.NewLine +
            " " + Environment.NewLine +
            "^FO130,376" + Environment.NewLine +
            "^BQN,0,88,H" + Environment.NewLine +
            "^FD&gt" + input3 + "^FS" + Environment.NewLine +
            " " + Environment.NewLine +
            "^XZ";


        try
        {
            // Open connection
            System.Net.Sockets.TcpClient client = new System.Net.Sockets.TcpClient();
            client.Connect(printerIp, printerPort);

            // Write ZPL String to connection
            StreamWriter writer = new StreamWriter(client.GetStream());
            writer.Write(labeltext);
            writer.Flush();

            // Close Connection
            writer.Close();
            client.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex + "\n\n\nCONEXIUNEA LA PRINTER NU A PUTUT FI REALIZATA!");
            return false;
        }
        return true;
    }
}
}